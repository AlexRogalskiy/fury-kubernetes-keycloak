# Copyright (c) 2021 SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

kind: pipeline
name: license

steps:
  - name: check
    image: docker.io/library/golang:1.16
    pull: always
    commands:
      - go get -u github.com/google/addlicense
      - addlicense -c "SIGHUP s.r.l" -v -l bsd --check .
---
kind: pipeline
name: policeman

platform:
  os: linux
  arch: amd64

depends_on:
  - license

steps:
  - name: lint
    image: quay.io/sighup/policeman
    pull: always
    environment:
      VALIDATE_BASH: "false"
    depends_on:
      - clone

  - name: render
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.18.19_3.8.7_2.4.1
    pull: always
    depends_on:
      - clone
    commands:
      - kustomize build katalog/keycloak > keycloak.yml

  - name: deprek8ion
    image: eu.gcr.io/swade1987/deprek8ion:1.1.34
    pull: always
    depends_on:
      - render
    commands:
      - /conftest test -p /policies keycloak.yml

---
kind: pipeline
name: e2e-kubernetes-1.18

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**
      # TO BE DELETED
      - refs/heads/feature-add-test-and-upgrade

depends_on:
  - policeman

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.11.0
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ clone ]
    settings:
      action: cluster-118
      pipeline_id: cluster-118
      cluster_version: '1.18.19'
      instance_path: /shared
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password

  - name: test
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.18.19_3.8.7_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ init ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-118
      - bats -t katalog/tests/deploy-keycloak.sh
      - bats -t katalog/tests/test-users-keycloak.sh

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.11.0
    pull: always
    depends_on: [ test ]
    settings:
      action: destroy
      pipeline_id: cluster-118
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      status:
      - success
      - failure

volumes:
- name: shared
  temp: {}

---
kind: pipeline
name: e2e-kubernetes-1.19

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**
      # TO BE DELETED
      - refs/heads/feature-add-test-and-upgrade

depends_on:
  - policeman

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.11.0
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ clone ]
    settings:
      action: cluster-119
      pipeline_id: cluster-119
      cluster_version: '1.19.11'
      instance_path: /shared
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password

  - name: test
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.19.11_3.8.7_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ init ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-119
      - bats -t katalog/tests/deploy-keycloak.sh
      - bats -t katalog/tests/test-users-keycloak.sh

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.11.0
    pull: always
    depends_on: [ test ]
    settings:
      action: destroy
      pipeline_id: cluster-119
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      status:
      - success
      - failure

volumes:
- name: shared
  temp: {}

---
kind: pipeline
name: e2e-kubernetes-1.20

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**
      # TO BE DELETED
      - refs/heads/feature-add-test-and-upgrade

depends_on:
  - policeman

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.11.0
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ clone ]
    settings:
      action: cluster-120
      pipeline_id: cluster-120
      cluster_version: '1.20.7'
      instance_path: /shared
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password

  - name: test
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.20.7_3.8.7_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ init ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-120
      - bats -t katalog/tests/deploy-keycloak.sh
      - bats -t katalog/tests/test-users-keycloak.sh

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.11.0
    pull: always
    depends_on: [ test ]
    settings:
      action: destroy
      pipeline_id: cluster-120
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      status:
      - success
      - failure

volumes:
- name: shared
  temp: {}

---
kind: pipeline
name: e2e-kubernetes-1.21

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**
      # TO BE DELETED
      - refs/heads/feature-add-test-and-upgrade

depends_on:
  - policeman

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.11.0
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ clone ]
    settings:
      action: cluster-121
      pipeline_id: cluster-121
      cluster_version: '1.21.1'
      instance_path: /shared
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password

  - name: test
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.21.1_3.8.7_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ init ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-121
      - bats -t katalog/tests/deploy-keycloak.sh
      - bats -t katalog/tests/test-users-keycloak.sh

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.11.0
    pull: always
    depends_on: [ test ]
    settings:
      action: destroy
      pipeline_id: cluster-121
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      status:
      - success
      - failure

volumes:
- name: shared
  temp: {}